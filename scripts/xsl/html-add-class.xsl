<?xml version="1.0" encoding="UTF-8"?>
    <xsl:stylesheet version="2.0" 
        xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
        xmlns:xhtml="http://www.w3.org/1999/xhtml" 
        xpath-default-namespace="http://www.w3.org/1999/xhtml"
        exclude-result-prefixes="xhtml">
        
        <xsl:template match="node()|@*">
            <xsl:copy>
                <xsl:apply-templates select="node()|@*"/>
            </xsl:copy>
        </xsl:template>
        
        <xsl:template match="html/body/@class">
            <xsl:attribute name="class">container</xsl:attribute>
        </xsl:template>
        
        <xsl:template match="html/body/div/@class[.='stdheader autogenerated']">
            <xsl:attribute name="class">stdheader autogenerated text-center</xsl:attribute>
        </xsl:template>
        
        <xsl:template match="html/body/div[@class='stdheader autogenerated']/h1[span]">
            <xsl:element name="p">
            <xsl:attribute name="class">text-grey subtitle</xsl:attribute>
                <xsl:apply-templates select="node()|@*"/>
            
            </xsl:element>
        </xsl:template>
        
        <xsl:template match="html/body/div[@class='stdfooter autogenerated']">
            <xsl:element name="hr"></xsl:element>
            <xsl:copy>
                <xsl:apply-templates select="node()|@*"/>
            </xsl:copy>
        </xsl:template>
        
        <xsl:template match="html/body/div/@class[.='stdfooter autogenerated']">
            <xsl:attribute name="class">stdfooter autogenerated row</xsl:attribute>
        </xsl:template>
        
        <xsl:template match="html/body/div/div/@class[.='footer']">
            <xsl:attribute name="class">footer col-12 text-center</xsl:attribute>
        </xsl:template>
        
        <xsl:template match="html//span/@class[.='']">
            <xsl:attribute name="class">text-light pull-right</xsl:attribute>
        </xsl:template>
        
        <xsl:template match="html//span[@class='']/text()">
            <xsl:value-of select="replace(.,'page','pagina')"/>
        </xsl:template>
        
        <xsl:template match="html//span[@class='pagebreak']/text()">
            <xsl:value-of select="replace(.,'Page','p.')"/>
        </xsl:template>
        
        <xsl:template match="html/body/div/address">
            <xsl:element name="div">
                <xsl:attribute name="class">col text-center text-success</xsl:attribute>
                <xsl:copy>
                    <xsl:apply-templates select="node()|@*"/>
                </xsl:copy>
            </xsl:element>
            
        </xsl:template>
        
        <xsl:template match="html/body/div/address/text()">
            <xsl:text>Croatiae auctores Latini; Universitas Zagrabiensis, Facultas philosophica </xsl:text>
            <xsl:apply-templates></xsl:apply-templates>
        </xsl:template>
    </xsl:stylesheet>    
